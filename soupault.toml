### Configuration file for the soupault website generator ###

## Global settings

[settings]
  soupault_version = "5.0.0"

  verbose = true
  debug = true
  
  # Force "clean URLs", i.e. book/foo.md becomes build/foo/index.html
  clean_urls = true

  # Where generated files go
  build_dir = "public/"

  # Where page files are stored
  site_dir = "site/"

  # Where in the template the page content is inserted
  default_content_selector = "content"

  default_template_file = "templates/main.html"

  # Page considered the section index
  index_page = "index"

  # Files that are considered pages and processed
  # All other files are considered assets and copied unchanged
  page_file_extensions = ["html", "md"]

  # assume HTML5
  doctype = "<!DOCTYPE html>"
  
  # NB: built-in processor does NOT recognise <dl> definition lists
  # markdown_extensions = ["md"]
  # if settings.markdown_extensions is not in the config or is set to an empty list, then built-in Markdown processing is disabled.
  
## Preprocessors convert non-HTML files to HTML for further processing by soupault
[preprocessors]
  md = "/usr/bin/pandoc -f markdown -t html"

# Removes the "webpage number" from the output path
# e.g. site/01-about-us.md becomes public/about-us/
[hooks.pre-process]
  lua_source = '''
    target_file_name = Sys.basename(target_file)

    target_page_dir = Sys.basename(target_dir)
    target_page_parent_dir = Sys.dirname(target_dir)

    target_page_dir = Regex.replace(target_page_dir, "^\\d+-", "")

    target_dir = Sys.join_path(target_page_parent_dir, target_page_dir)
    target_file = Sys.join_path(target_dir, target_file_name)

    Log.debug(format("Target file name set to \"%s\"", target_file))
'''

## Find all the page numbers to build the menu
[hooks.post-index]
  lua_source = '''
    page_file_name = Sys.basename(page_file)
    res = Regex.find_all(page_file_name, "^(\\d+)")

    if res then
      webpage_number = res[1]
    else
      webpage_number = 0
    end

    index_fields["webpage_number"] = format("%s", webpage_number)

    Log.debug(format("Extracted page number: %s", webpage_number))
'''

## build the index (menu) data to put on every page
[index]
  index = true
  sort_by = "webpage_number"
  sort_type = "numeric"
  sort_descending = false
  extract_after_widgets = ["page-title"]

[index.fields.title]
  selector = "title"
  
[index.views.menu]
  index_selector = "ul#menu"
  index_template = '''
	  <a href="/"><li> Our Programme</li></a> 
	  {% for e in entries %}
		<a href="{{e.url}}"><li>{{e.title}}</li></a> 
	  {% endfor %}
	  <li>
		<copyright>This site &copy; 2019-2025 Windsor Morris.</copyright>
	  </li>
'''

# Widgets are executed after pre-process hooks and index generation unless specified otherwise

[widgets.wrap-images]
  selector = "image-left"
  widget = "element_template"
  template = '''
	<div class="image-left">
		<img src={{src}} alt={{alt}} style="height: {{height}}" />
	</div>
  '''
  
[widgets.delete-figcaption]
  widget = "delete_element"
  selector = "figcaption"
  
[widgets.footnotes]
  widget = "footnotes"
  selector = "footnotes-go-here"
  footnote_selector = "footnote"
  footnote_template = "<p class='footnote'> </p>"

# Takes the content of the first <h1> and inserts it into the <title>
[widgets.page-title]
  widget = "title"
  selector = "h1"
  default = "Title needed!"

[widgets.insert-usual-logo]
  widget = "insert_html"
  selector = "logo"
  html = """   
    <a href='/'><img class='logo' src='/img/windsorCastle_100.gif'></a>
"""  
  
[widgets.insert-beach-logo]
  path_regex = "course"
  selector = "logo"
  widget = "insert_html"
  action = "replace_content"
  after = "insert-usual-logo"
  html = """   
    <a href='/'><img class='logo' src='/img/programme_logo.jpg'></a>
"""

[widgets.insert-kemp-logo]
  path_regex = "about-morris"
  widget = "insert_html"
  selector = "logo"
  action = "replace_content"
  after = "insert-usual-logo"
  html = """   
    <a href='/'><div>
      <img src='https://upload.wikimedia.org/wikipedia/commons/thumb/d/de/Will_Kemp_Elizabethan_Clown_Jig.jpg/200px-Will_Kemp_Elizabethan_Clown_Jig.jpg' />
      <span>Photo: Wikipedia.</span>
    </div></a>
"""

[widgets.insert-google-translate-script]
  path_regex = "about"
  widget = "insert_html"
  selector = "head"
  html = """   
    <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
    <script type="text/javascript">
		function googleTranslateElementInit() {
		  new google.translate.TranslateElement({pageLanguage: 'en'}, 'google_translate_element');
		}
	</script>
"""

[widgets.insert-google-translate-div]
  path_regex = "about"
  selector = "content"
  widget = "insert_html"
  action = "prepend_child"
  html = """   
		<div id="google_translate_element"></div>
"""

